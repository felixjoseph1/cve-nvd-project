import React,{useState,useEffect} from 'react'
import axios from 'axios';
import { useParams } from 'react-router-dom';

const DetailsPage = () => {
    const { cveid } = useParams();

    const [details, setDetails] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const fetchData = async () => {
      try {
          const response = await axios.get(`http://localhost:5001/cves/${cveid}`);
          setDetails(response.data);
          // console.log(response.data);                
          // This will log the value of the first CPE match;
      } catch (error) {
          console.error('Error fetching details:', error);
          setError('Failed to fetch details. Please try again later.');
      } finally {
          setLoading(false);
      }

  };
  useEffect(() => {
    // Only fetch data if cveid is defined
    if (cveid) {
        fetchData();
    }
}, [cveid]);
  
    if (loading) {
      return <div>Loading...</div>
    };
  
    if (error) {
      return <div>Error: {error}</div>
    };
    return(
      <>
      <div className='flex flex-col ml-32 mr-48 mt-10'>
          <h1 className='text-3xl font-bold'>{details.cve_id}</h1>
          <h3 className='text-lg font-bold pt-3'>Description:</h3>
          <p className='pt-1'>{details.description}</p>
          <h3 className='text-lg font-bold pt-3'>CVSS V2 Metrics:</h3>
          <div className='flex flex-row pt-2'>
            <p className='pr-10'>
              <span className='text-base font-bold pr-2'>Severity:</span>
              <span>{details.metrics.cvssMetricV2[0].baseSeverity}</span>
            </p>
            <p>
              <span className='text-base font-bold pr-2'>Score:</span>
              <span className='text-red-600 font-bold'>{details.metrics.cvssMetricV2[0].cvssData.baseScore}</span>
            </p>
          </div>
          <p className='pt-2'>
            <span className=' text-base font-bold pr-3 '>Vector String</span>
            <span>{details.metrics.cvssMetricV2[0].cvssData.vectorString}</span>
          </p>
          <div className='flex pt-4'>
            <table>
              <thead className='text-md'>
                <th className='px-16 py-3 border-2 border-black'>Access Vector</th>
                <th  className='px-16 py-3 border-2 border-black'>Access Complexity</th>
                <th  className='px-16 py-3 border-2 border-black'>Authentication</th>
                <th  className='px-16 py-3 border-2 border-black'>Confidentiality Impact</th>
                <th  className='px-16 py-3 border-2 border-black'>Integrity Impact</th>
                <th  className='px-16 py-3 border-2 border-black'>Availability Impact</th>
              </thead>
              <tbody>
                <tr>
                  <td className='px-16 py-3 border-2 border-black'>{details.metrics.cvssMetricV2[0].cvssData.accessVector}</td>
                  <td className='px-16 py-3 border-2 border-black'>{details.metrics.cvssMetricV2[0].cvssData.accessComplexity}</td>
                  <td className='px-16 py-3 border-2 border-black'>{details.metrics.cvssMetricV2[0].cvssData.authentication}</td>
                  <td className='px-16 py-3 border-2 border-black'>{details.metrics.cvssMetricV2[0].cvssData.confidentialityImpact}</td>
                  <td className='px-16 py-3 border-2 border-black'>{details.metrics.cvssMetricV2[0].cvssData.integrityImpact}</td>
                  <td className='px-16 py-3 border-2 border-black'>{details.metrics.cvssMetricV2[0].cvssData.availabilityImpact}</td>
                </tr>
              </tbody>
            </table>
            </div>
            <h3 className='text-lg font-bold pt-3'>Scores:</h3>
            <p className='pt-2'>
              <span className='text-base font-bold pt-1 pr-3'>Exploitability Score:</span>
              <span>{details.metrics.cvssMetricV2[0].exploitabilityScore}</span>
            </p>
            <p className='pt-2'>
              <span className='text-base font-bold pt-1 pr-3'>Impact Score:</span>
              <span>{details.metrics.cvssMetricV2[0].impactScore}</span>
            </p>
      
            <h3 className='text-lg font-bold pt-3'>CPE:</h3>
          <div className='flex pt-3'>
            <table>
              <thead>
                <th className='px-16 py-3 border-2 border-black'>Criteria</th>
                <th className='px-16 py-3 border-2 border-black'>Match Criteria ID</th>
                <th className='px-16 py-3 border-2 border-black'>Vulnerable</th>
              </thead>
              <tbody>
                {details?.configurations[0]?.nodes[0]?.cpeMatch.map((item) => (
                  <tr key={item.id}>
                  <td className='px-16 py-3 border-2 border-black'>{item.criteria}</td>
                  <td className='px-16 py-3 border-2 border-black'>{item.matchCriteriaId}</td>
                  <td className='px-16 py-3 border-2 border-black'>{item.vulnerable?'yes':'no'}</td>
                </tr>
                ))};
              </tbody>
            </table>
          </div>
      </div>
      </>
    );
};

export default DetailsPage;